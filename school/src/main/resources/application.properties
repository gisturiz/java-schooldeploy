server.port=${PORT:2019}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

server.error.whitelabel.enabled=false

spring.datasource.url=${SPRING_DATA_URL:jdbc:postgresql://ec2-174-129-27-158.compute-1.amazonaws.com:5432/d9o34e7ufdvl3b?user=swdpojllxpvmon&password=e1e85f09da745b4d4e73e7fd83387166a543e205032c369e847cad31a7439bcb&sslmode=require}
spring.datasource.username=d9o34e7ufdvl3b
spring.datasource.password=e1e85f09da745b4d4e73e7fd83387166a543e205032c369e847cad31a7439bcb
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

# For h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

# For PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/ourcourses
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD:password}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always




